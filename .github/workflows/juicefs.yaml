name: Build juicefs image

on:
  workflow_dispatch:
    inputs:
      ce_juicefs_build_version:
        description: 'ce juicefs version for image build'
        required: false
        type: string
  schedule:
    - cron: "0 0 * * *"
#  push:
#    branches:
#      - docker_build

jobs:
  publish-image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Login Docker Hub
      run: docker login registry.cn-hangzhou.aliyuncs.com --username zww@hdls.me --password ${{ secrets.ACR_TOKEN }}
    - name: check latest tag
      continue-on-error: true
      env:
        JUICEFS_BUILD_VERSION: ${{ inputs.ce_juicefs_build_version }}
      run: |
        if [ ${{ env.JUICEFS_BUILD_VERSION }} ]; then
          echo "JUICEFS_CE_LATEST_VERSION=${{ env.JUICEFS_BUILD_VERSION }}" >> $GITHUB_ENV
          echo "MOUNT_IMAGE_EXIST=false" >> $GITHUB_ENV
        else
          JUICEFS_CE_LATEST_VERSION=$(curl -fsSL https://api.github.com/repos/juicedata/juicefs/releases/latest | grep tag_name | grep -oE 'v[0-9]+\.[0-9][0-9]*(\.[0-9]+(-[0-9a-z]+)?)?')
          if [ -z "$JUICEFS_CE_LATEST_VERSION" ]; then
            echo "Failed to get juicefs ce version"
            exit 1
          fi
          echo "fuse image is registry.cn-hangzhou.aliyuncs.com/juicefs/juicefs-fuse:ce-${JUICEFS_CE_LATEST_VERSION}"
          echo "MOUNT_IMAGE_EXIST=false" >> $GITHUB_ENV
          echo "JUICEFS_CE_LATEST_VERSION=$JUICEFS_CE_LATEST_VERSION" >> $GITHUB_ENV
          docker pull registry.cn-hangzhou.aliyuncs.com/juicefs/juicefs-fuse:ce-${JUICEFS_CE_LATEST_VERSION}
          rst=$?
          if [ $rst -eq 0 ]; then
            echo "MOUNT_IMAGE_EXIST=true" >> $GITHUB_ENV
          fi
        fi
    - name: Buildx and Push juicefs image
      env:
        CEVERSION: ce-${{ env.JUICEFS_CE_LATEST_VERSION }}
        CEJUICEFS_VERSION: ${{ env.JUICEFS_CE_LATEST_VERSION }}
      run: |
        image_exist=${{ env.MOUNT_IMAGE_EXIST }}
        if [ $image_exist == "false" ]; then
          echo "Build JuiceFS version image"
          echo "IMAGE_TAG=${CEVERSION}" >> $GITHUB_ENV
          make fuse-ce-image
        else
          echo "JuiceFS FUSE version image already exists"
        fi
    - name: sync image
      env:
        ACR_TOKEN: ${{ secrets.ACR_TOKEN }}
      run: |
        image_exist=${{ env.MOUNT_IMAGE_EXIST }}
        if [ $image_exist == "false" ]; then
          echo "Sync JuiceFS version image"
          cd ${GITHUB_WORKSPACE}/.github/scripts/
          ./sync.sh
        else
          echo "JuiceFS FUSE version image already exists"
        fi
    - name: Setup upterm session
      if: ${{ failure() }}
      timeout-minutes: 60
      uses: lhotari/action-upterm@v1

  publish-ee-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login Docker Hub
        run: docker login registry.cn-hangzhou.aliyuncs.com --username zww@hdls.me --password ${{ secrets.ACR_TOKEN }}
      - name: check latest tag
        continue-on-error: true
        run: |
          JUICEFS_EE_LATEST_VERSION=$(curl -sSL https://juicefs.com/static/juicefs -o juicefs-ee && chmod +x juicefs-ee && ./juicefs-ee version | cut -d' ' -f3)
          if [ -z "$JUICEFS_EE_LATEST_VERSION" ]; then
            echo "Failed to get juicefs ee version"
            exit 1
          fi
          echo "mount image is registry.cn-hangzhou.aliyuncs.com/juicefs/juicefs-fuse:ee-$JUICEFS_EE_LATEST_VERSION"
          echo "MOUNT_IMAGE_EXIST=false" >> $GITHUB_ENV
          echo "JUICEFS_EE_LATEST_VERSION=$JUICEFS_EE_LATEST_VERSION" >> $GITHUB_ENV
          docker pull registry.cn-hangzhou.aliyuncs.com/juicefs/juicefs-fuse:ee-$JUICEFS_EE_LATEST_VERSION
          rst=$?
          if [ $rst -eq 0 ]; then
            echo "MOUNT_IMAGE_EXIST=true" >> $GITHUB_ENV
          fi
      - name: Buildx and Push juicefs image
        env:
          EEVERSION: ee-${{ env.JUICEFS_EE_LATEST_VERSION }}
        run: |
          image_exist=${{ env.MOUNT_IMAGE_EXIST }}
          if [ $image_exist == "false" ]; then
            echo "Build JuiceFS new version image"
            echo "IMAGE_TAG=${EEVERSION}" >> $GITHUB_ENV
            make fuse-ee-image
          else
            echo "JuiceFS mount ee version image already exists"
          fi
      - name: sync image
        env:
          ACR_TOKEN: ${{ secrets.ACR_TOKEN }}
        run: |
          image_exist=${{ env.MOUNT_IMAGE_EXIST }}
          if [ $image_exist == "false" ]; then
            echo "Sync JuiceFS version image"
            cd ${GITHUB_WORKSPACE}/.github/scripts/
            ./sync.sh
          else
            echo "JuiceFS FUSE version image already exists"
          fi
      - name: Setup upterm session
        if: ${{ failure() }}
        timeout-minutes: 60
        uses: lhotari/action-upterm@v1